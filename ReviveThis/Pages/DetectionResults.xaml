<UserControl x:Class="ReviveThis.Pages.DetectionResults"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:viewModels="clr-namespace:ReviveThis.ViewModels"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d" 
      d:DesignHeight="480" d:DesignWidth="640">

    <UserControl.DataContext>
        <viewModels:DetectionResultsViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <system:Double x:Key="ButtonPathHeight">24</system:Double>
    </UserControl.Resources>
    
    <Grid Style="{StaticResource ContentRoot}">
        
        <Grid x:Name="SelectionGrid" MinWidth="300" HorizontalAlignment="Center" VerticalAlignment="Top">
            <Grid.Resources>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HaveResults, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Hidden"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>

                <ColumnDefinition Width="*"></ColumnDefinition>

            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <Button Grid.Column="0"
                    Grid.Row="0"
                    Margin="4"
                    Command="{Binding StartScan}"
                    IsEnabled="False"
                    Content="Do a system scan and save a logfile">
                <Button.CommandParameter>
                    <system:Boolean>True</system:Boolean>
                </Button.CommandParameter>
                <Button.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Margin="18" VerticalAlignment="Center">
                            <Path Data="{StaticResource SearchFilePath}" 
                                  Height="{StaticResource ButtonPathHeight}" 
                                  Width="{StaticResource ButtonPathHeight}" 
                                  Margin="0 0 12 0"
                                  HorizontalAlignment="Center" 
                                  Stretch="Uniform" 
                                  Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
                            <ContentControl IsTabStop="False" TextBlock.TextAlignment="Center" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=OneWay}" />
                        </StackPanel>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>

            <Button
                    Grid.Column="0"
                    Grid.Row="1"
                    Margin="4"
                    Command="{Binding StartScan}"
                    Content="Do a system scan only">
                <Button.CommandParameter>
                    <system:Boolean>False</system:Boolean>
                </Button.CommandParameter>
                <Button.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Margin="18" VerticalAlignment="Center">
                            <Path Data="{StaticResource SearchPath}" 
                                  Height="{StaticResource ButtonPathHeight}" 
                                  Width="{StaticResource ButtonPathHeight}" 
                                  Margin="0 0 12 0 "
                                  HorizontalAlignment="Center" 
                                  Stretch="Uniform" 
                                  Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
                            <ContentControl IsTabStop="False" TextBlock.TextAlignment="Center" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=OneWay}" />
                        </StackPanel>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </Grid>
        <Grid x:Name="ResultsGrid" >
            <Grid.Resources>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Hidden"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HaveResults, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border Margin="0" Grid.Row="0"  Padding="0" BorderBrush="{StaticResource ItemBorder}" BorderThickness="1" >
                <ListView 
                    x:Name="ResultsListView" 
                    Grid.Row="0" 
                    VerticalAlignment="Stretch"  
                    HorizontalAlignment="Stretch" 
                    ItemsSource="{Binding Items}" 
                    SelectedItem="{Binding SelectedItem, Mode=TwoWay}" >

                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridView.ColumnHeaderContainerStyle>
                            <Style>
                                <Setter Property="FrameworkElement.Visibility" Value="Collapsed"/>
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                        <CheckBox Tag="{Binding}">
                                            <CheckBox.Resources>
                                                <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                    <Setter Property="IsChecked" Value="False" />
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                    
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding CanRepair, Mode=OneWay}" Value="True" />
                                                                <Condition Binding="{Binding IsChecked, Mode=OneWay}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="True" />
                                                            <Setter Property="IsChecked" Value="True" />
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                        
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding CanRepair, Mode=OneWay}" Value="True" />
                                                                <Condition Binding="{Binding IsChecked, Mode=OneWay}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="True" />
                                                            <Setter Property="IsChecked" Value="False" />
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                        

                                                    </Style.Triggers>
                                                </Style>
                                            </CheckBox.Resources>
                                            
                                        </CheckBox>
                                    
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Results" Width="Auto" DisplayMemberBinding="{Binding LegacyString, Mode=OneWay}"/>
                        <!--<GridViewColumn Header="" Width="Auto" DisplayMemberBinding="{Binding Version, Mode=OneWay}"/>
                            <GridViewColumn Header="Information" Width="Auto" DisplayMemberBinding="{Binding Author, Mode=OneWay}"/>-->
                    </GridView>
                </ListView.View>

                <!--<ListView.ContextMenu  >
                        <ContextMenu HasDropShadow="True" ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}, Converter={StaticResource ContextMenuConverter}}" >

                        </ContextMenu>
                    </ListView.ContextMenu>-->


                <ListView.Resources>

                    <ContextMenu
                            x:Key="ResultContextMenu" 
                            HasDropShadow="True"
                            ItemsSource="{Binding Converter={StaticResource ContextMenuConverter}}">
                        <ContextMenu.Resources>
                            <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}" >
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <Setter Property="IsOpen" Value="False"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="ItemsSource" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" ></Setter>

                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ContextMenu.Resources>
                    </ContextMenu>

                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="ToolTip" Value="{Binding Converter={StaticResource ScanResultToolTipConverter}}"></Setter>
                        <Setter Property="ContextMenu" Value="{StaticResource ResultContextMenu}"/>
                        <!--<Setter Property="ContextMenu.Placement" Value="MousePoint"/>
                            <Setter Property="ContextMenu.HasDropShadow" Value="True"/>-->
                    </Style>

                </ListView.Resources>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="Normal" Padding="8,0,0,0" FontSize="14" Text="{Binding Name}" Foreground="{DynamicResource AccentBrush}"/>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
            </Border>
        </Grid>
    </Grid>
</UserControl>
